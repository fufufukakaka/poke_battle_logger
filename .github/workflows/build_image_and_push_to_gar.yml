name: Build and Push Image

on:
  push:
    branches:
    - main

jobs:
  build-and-publish:
    name: Build and Push docker image
    runs-on: ubuntu-latest

    steps:
    - name: Check disk space
      run: df . -h
    - name: Free disk space
      run: |
            sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
            sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
            echo "some directories deleted"
            sudo apt install aptitude -y >/dev/null 2>&1
            sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete libmysqlclient \
            unixodbc-dev yarn chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
            -y -f >/dev/null 2>&1
            sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
            sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
            sudo aptitude purge '~n ^mysql' -f -y >/dev/null 2>&1
            sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
            sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
            sudo apt-get autoremove -y >/dev/null 2>&1
            sudo apt-get autoclean -y >/dev/null 2>&1
            echo "some packages purged"
    - name: Check disk space
      run: |
            sudo dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -nr | head
            df . -h
            sudo du /usr/ -hx -d 4 --threshold=1G | sort -hr | head
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCLOUD_AUTH }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Configure docker for artifact registry
      run: |
        gcloud auth configure-docker asia-northeast1-docker.pkg.dev

    - name: Build
      run: |
        docker build -f ./docker/server/Dockerfile -t asia-northeast1-docker.pkg.dev/turing-alcove-157907/poke-battle-logger-api/production-image:${{ github.sha }} ./

    - name: Push
      run: |
        docker push asia-northeast1-docker.pkg.dev/turing-alcove-157907/poke-battle-logger-api/production-image:${{ github.sha }}
